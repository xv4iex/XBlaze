--[[
Changelog (12.07.2023):
> Added toggle for ignoring players with ForceField.
> Fixed head expander,
> Changed sorting of FOV dropdown selection menu,
> Added ClockTime enforcement,
--]]
-- You can use this: loadstring(game:HttpGet(("https://pastebin.com/raw/a15ezPaB"),true))()
-- Instances:
local thisBuildVer = "4.2.3"

local ScreenGui = Instance.new("ScreenGui")
local bg_main = Instance.new("Frame")
local aratio = Instance.new("UIAspectRatioConstraint")
local title = Instance.new("TextLabel")
local textConstraint = Instance.new("UITextSizeConstraint")
local sizeConstraint = Instance.new("UISizeConstraint")
local configs = Instance.new("Frame")
local UIGridLayout = Instance.new("UIGridLayout")
local subtitle = Instance.new("TextLabel")
local Assets = Instance.new("Folder")
local sectionMain = Instance.new("TextLabel")
local textConstraint_2 = Instance.new("UITextSizeConstraint")
local sectionSubInput = Instance.new("Frame")
local setting = Instance.new("TextLabel")
local textConstraint_3 = Instance.new("UITextSizeConstraint")
local input = Instance.new("TextBox")
local UICorner = Instance.new("UICorner")
local sectionSubBoolean = Instance.new("Frame")
local setting_2 = Instance.new("TextLabel")
local textConstraint_4 = Instance.new("UITextSizeConstraint")
local detection = Instance.new("TextButton")
local Visuals = Instance.new("Folder")
local espGui = Instance.new("BillboardGui")
local box = Instance.new("Frame")
local hp = Instance.new("Frame")
local current = Instance.new("Frame")
local name = Instance.new("TextLabel")
local bin = Instance.new("Folder")
local desc = Instance.new("Frame")
local descContent = Instance.new("TextLabel")
local textConstraint_5 = Instance.new("UITextSizeConstraint")
local NotPaintable = Instance.new("Folder")
local fovCircle = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Glow = Instance.new('Highlight')
local ScrollingFrame = Instance.new('ScrollingFrame')
local DropDownBody = Instance.new('Frame')
local DropDownScroll = Instance.new('ScrollingFrame')
local DropDownListLayout = Instance.new('UIListLayout')

-- Made it myself cuz converter sucks
local stroke_src = Instance.new('UIStroke')
stroke_src.Color = Color3.fromRGB(166, 166, 166)
stroke_src.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

local strk_parents = {
	sectionMain,
	subtitle,
	title,
	desc,
	bg_main,
	DropDownBody,
}

for i, v in pairs(strk_parents) do
	local stroke_copy = stroke_src:Clone()
	stroke_copy.Parent = v
	stroke_copy.Name = v.Name..'_stroke'
end

local fovStroke = stroke_src:Clone()
fovStroke.Color = Color3.fromRGB(235, 0, 0)
fovStroke.Parent = fovCircle

stroke_src:Destroy()

--Properties:

ScreenGui.Name = " "
ScreenGui.Parent = game.Players.LocalPlayer.PlayerGui
ScreenGui.Enabled = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.DisplayOrder = 999999998
ScreenGui.ResetOnSpawn = false

local ScreenGui_FOVCopy = ScreenGui:Clone()
ScreenGui_FOVCopy.Parent = ScreenGui.Parent
ScreenGui_FOVCopy.DisplayOrder = ScreenGui.DisplayOrder + 1

bg_main.Name = "bg_main"
bg_main.Parent = ScreenGui
bg_main.AnchorPoint = Vector2.new(0.5, 0.5)
bg_main.BackgroundColor3 = Color3.fromRGB(40, 41, 45)
bg_main.BorderColor3 = Color3.fromRGB(0, 0, 0)
bg_main.BorderSizePixel = 0
bg_main.Position = UDim2.new(0.5, 0, 0.5, 0)
bg_main.Size = UDim2.new(0.61500001, 0, 0.925000012, 0)
bg_main.ZIndex = 3

aratio.Name = "aratio"
aratio.Parent = bg_main
aratio.AspectRatio = 1.250

title.Name = "title"
title.Parent = bg_main
title.AnchorPoint = Vector2.new(0.5, 0)
title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1.000
title.BorderColor3 = Color3.fromRGB(0, 0, 0)
title.BorderSizePixel = 0
title.Position = UDim2.new(0.5, 0, 0, 0)
title.Size = UDim2.new(1, 0, 0.0500000007, 0)
title.Font = Enum.Font.SourceSans
title.Text = " Bloxxed Hub - <game_name> - v<ver>"
title.TextColor3 = Color3.fromRGB(166, 166, 166)
title.TextScaled = true
title.TextSize = 14.000
title.TextStrokeTransparency = 0.500
title.TextWrapped = true
title.TextXAlignment = Enum.TextXAlignment.Left

textConstraint.Name = "textConstraint"
textConstraint.Parent = title
textConstraint.MaxTextSize = 22

sizeConstraint.Name = "sizeConstraint"
sizeConstraint.Parent = bg_main
sizeConstraint.MaxSize = Vector2.new(404, 325)

configs.Name = "configs"
configs.Parent = bg_main
configs.AnchorPoint = Vector2.new(0.5, 0.5)
configs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
configs.BackgroundTransparency = 1.000
configs.BorderColor3 = Color3.fromRGB(0, 0, 0)
configs.BorderSizePixel = 0
configs.Position = UDim2.new(0.5, 0, 0.550000012, 0)
configs.Size = UDim2.new(0.850000024, 0, 0.774999976, 0)
configs.ClipsDescendants = true

UIGridLayout.Parent = ScrollingFrame
UIGridLayout.FillDirection = Enum.FillDirection.Vertical
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellPadding = UDim2.new(0.200000003, 0, 0, 3)
UIGridLayout.CellSize = UDim2.new(0.400000006, 0, 0.0350000003, 0)

subtitle.Name = "subtitle"
subtitle.Parent = bg_main
subtitle.AnchorPoint = Vector2.new(0, 1)
subtitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
subtitle.BackgroundTransparency = 1.000
subtitle.BorderColor3 = Color3.fromRGB(0, 0, 0)
subtitle.BorderSizePixel = 0
subtitle.Position = UDim2.new(0, 0, 1, 0)
subtitle.Size = UDim2.new(1, 0, 0.0500000007, 0)
subtitle.Font = Enum.Font.SourceSansBold
subtitle.Text = "Made by  bloxxylenny on Discord | \"Insert\" to Show/Hide UI | User ID: <userid>"
subtitle.TextColor3 = Color3.fromRGB(166, 166, 166)
subtitle.TextScaled = true
subtitle.TextSize = 14.000
subtitle.TextWrapped = true

Assets.Name = "Assets"
Assets.Parent = ScreenGui

sectionMain.Name = "sectionMain"
sectionMain.Parent = Assets
sectionMain.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sectionMain.BackgroundTransparency = 1.000
sectionMain.BorderColor3 = Color3.fromRGB(0, 0, 0)
sectionMain.BorderSizePixel = 0
sectionMain.Size = UDim2.new(0.400000006, 0, 0.0350000003, 0)
sectionMain.Visible = false
sectionMain.Font = Enum.Font.SourceSans
sectionMain.Text = "[section_name]"
sectionMain.TextColor3 = Color3.fromRGB(166, 166, 166)
sectionMain.TextScaled = true
sectionMain.TextSize = 14.000
sectionMain.TextStrokeTransparency = 0.500
sectionMain.TextWrapped = true

textConstraint_2.Name = "textConstraint"
textConstraint_2.Parent = sectionMain
textConstraint_2.MaxTextSize = 22

sectionSubInput.Name = "sectionSubInput"
sectionSubInput.Parent = Assets
sectionSubInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sectionSubInput.BackgroundTransparency = 0.950
sectionSubInput.BorderColor3 = Color3.fromRGB(0, 0, 0)
sectionSubInput.BorderSizePixel = 0
sectionSubInput.Size = UDim2.new(0.400000006, 0, 0.0350000003, 0)
sectionSubInput.Visible = false

setting.Name = "setting"
setting.Parent = sectionSubInput
setting.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
setting.BackgroundTransparency = 1.000
setting.BorderColor3 = Color3.fromRGB(0, 0, 0)
setting.BorderSizePixel = 0
setting.Size = UDim2.new(0.600000024, 0, 1, 0)
setting.Font = Enum.Font.SourceSans
setting.Text = "settingName:"
setting.TextColor3 = Color3.fromRGB(166, 166, 166)
setting.TextScaled = true
setting.TextSize = 14.000
setting.TextStrokeTransparency = 0.500
setting.TextWrapped = true
setting.TextXAlignment = Enum.TextXAlignment.Left

textConstraint_3.Name = "textConstraint"
textConstraint_3.Parent = setting
textConstraint_3.MaxTextSize = 20

input.Name = "input"
input.Parent = sectionSubInput
input.AnchorPoint = Vector2.new(1, 0)
input.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
input.BackgroundTransparency = 0.500
input.BorderColor3 = Color3.fromRGB(0, 0, 0)
input.BorderSizePixel = 0
input.Position = UDim2.new(1, 0, 0, 0)
input.Size = UDim2.new(0.400000006, 0, 1, 0)
input.Font = Enum.Font.SourceSans
input.PlaceholderColor3 = Color3.fromRGB(125, 125, 125)
input.PlaceholderText = "_placeholder"
input.Text = ""
input.TextColor3 = Color3.fromRGB(166, 166, 166)
input.TextScaled = true
input.TextSize = 14.000
input.TextWrapped = true

UICorner.CornerRadius = UDim.new(0.25, 0)
UICorner.Parent = input

sectionSubBoolean.Name = "sectionSubBoolean"
sectionSubBoolean.Parent = Assets
sectionSubBoolean.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
sectionSubBoolean.BackgroundTransparency = 0.950
sectionSubBoolean.BorderColor3 = Color3.fromRGB(0, 0, 0)
sectionSubBoolean.BorderSizePixel = 0
sectionSubBoolean.Size = UDim2.new(0.400000006, 0, 0.035000007, 0)
sectionSubBoolean.Visible = false

setting_2.Name = "setting"
setting_2.Parent = sectionSubBoolean
setting_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
setting_2.BackgroundTransparency = 1.000
setting_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
setting_2.BorderSizePixel = 0
setting_2.Size = UDim2.new(1, 0, 1, 0)
setting_2.Font = Enum.Font.SourceSans
setting_2.Text = "settingName: boolean"
setting_2.TextColor3 = Color3.fromRGB(166, 166, 166)
setting_2.TextScaled = true
setting_2.TextSize = 14.000
setting_2.TextStrokeTransparency = 0.500
setting_2.TextWrapped = true
setting_2.TextXAlignment = Enum.TextXAlignment.Left

textConstraint_4.Name = "textConstraint"
textConstraint_4.Parent = setting_2
textConstraint_4.MaxTextSize = 20

detection.Name = "detection"
detection.Parent = sectionSubBoolean
detection.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
detection.BackgroundTransparency = 1.000
detection.BorderColor3 = Color3.fromRGB(0, 0, 0)
detection.BorderSizePixel = 0
detection.Size = UDim2.new(1, 0, 1, 0)
detection.ZIndex = 2
detection.Font = Enum.Font.SourceSans
detection.Text = ""
detection.TextColor3 = Color3.fromRGB(0, 0, 0)
detection.TextSize = 14.000

Visuals.Name = "Visuals"
Visuals.Parent = Assets

espGui.Name = "espGui"
espGui.Parent = Visuals
espGui.Enabled = false
espGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
espGui.Active = true
espGui.AlwaysOnTop = true
espGui.LightInfluence = 1.000
espGui.Size = UDim2.new(4.5, 0, 6, 0)

box.Name = "box"
box.Parent = espGui
box.AnchorPoint = Vector2.new(0.5, 0.5)
box.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
box.BackgroundTransparency = .9000
box.BorderColor3 = Color3.fromRGB(0, 0, 0)
box.BorderSizePixel = 0
box.Position = UDim2.new(0.5, 0, 0.5, 0)
box.Size = UDim2.new(1, -3, 1, -3)

local b_s = Instance.new('UIStroke')
b_s.Parent = box
b_s.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
b_s.Color = Color3.new(1, 1, 1)
b_s.Name = 'boxStroke'

hp.Name = "hp"
hp.Parent = espGui
hp.AnchorPoint = Vector2.new(0, 1)
hp.BackgroundColor3 = Color3.fromRGB(166, 0, 0)
hp.BorderColor3 = Color3.fromRGB(0, 0, 0)
hp.BorderSizePixel = 0
hp.Position = UDim2.new(0, 0, 1, 0)
hp.Size = UDim2.new(0.0500000007, 0, 1, 0)

current.Name = "current"
current.Parent = hp
current.AnchorPoint = Vector2.new(0, 1)
current.BackgroundColor3 = Color3.fromRGB(2, 198, 15)
current.BorderColor3 = Color3.fromRGB(0, 0, 0)
current.BorderSizePixel = 0
current.Position = UDim2.new(0, 0, 1, 0)
current.Size = UDim2.new(1, 0, 0.5, 0)

name.Name = "name"
name.Parent = espGui
name.AnchorPoint = Vector2.new(0, 1)
name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
name.BackgroundTransparency = 1.000
name.BorderColor3 = Color3.fromRGB(0, 0, 0)
name.BorderSizePixel = 0
name.Position = UDim2.new(0, 0, 1, 0)
name.Size = UDim2.new(1, 0, 0.200000003, 0)
name.Font = Enum.Font.SourceSansBold
name.Text = "Dummy\\n0 stds"
name.TextColor3 = Color3.fromRGB(255, 255, 255)
name.TextSize = 14.000
name.TextStrokeTransparency = 0.500
name.RichText = true

bin.Name = "bin"
bin.Parent = ScreenGui

desc.Name = "desc"
desc.Parent = ScreenGui
desc.AnchorPoint = Vector2.new(0, 0.5)
desc.BackgroundColor3 = Color3.fromRGB(40, 41, 45)
desc.BorderColor3 = Color3.fromRGB(0, 0, 0)
desc.BorderSizePixel = 0
desc.Position = UDim2.new(0.5, 0, 0.5, 0)
desc.Size = UDim2.new(0, 150, 0, 60)
desc.Visible = false
desc.ZIndex = 5

descContent.Name = "descContent"
descContent.Parent = desc
descContent.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
descContent.BackgroundTransparency = 1.000
descContent.BorderColor3 = Color3.fromRGB(0, 0, 0)
descContent.BorderSizePixel = 0
descContent.Size = UDim2.new(1, 0, 1, 0)
descContent.Font = Enum.Font.SourceSans
descContent.Text = "Description"
descContent.TextColor3 = Color3.fromRGB(166, 166, 166)
descContent.TextScaled = true
descContent.TextSize = 14.000
descContent.TextStrokeTransparency = 0.500
descContent.TextWrapped = true
descContent.TextXAlignment = Enum.TextXAlignment.Left

textConstraint_5.Name = "textConstraint"
textConstraint_5.Parent = descContent
textConstraint_5.MaxTextSize = 22

NotPaintable.Name = "NotPaintable"
NotPaintable.Parent = ScreenGui

fovCircle.Name = "fovCircle"
fovCircle.Parent = ScreenGui_FOVCopy
fovCircle.AnchorPoint = Vector2.new(0.5, 0.5)
fovCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
fovCircle.BackgroundTransparency = 1.000
fovCircle.BorderColor3 = Color3.fromRGB(0, 0, 0)
fovCircle.BorderSizePixel = 0
fovCircle.Size = UDim2.new(0, 90, 0, 90)
fovCircle.Visible = false

UICorner_2.CornerRadius = UDim.new(1, 0)
UICorner_2.Parent = fovCircle

Glow.Parent = Visuals
Glow.OutlineTransparency = 1
Glow.FillTransparency = .5
Glow.Name = 'glow'

ScrollingFrame.Parent = configs
ScrollingFrame.BackgroundTransparency = 1
ScrollingFrame.Name = 'configScroll'
ScrollingFrame.Size = UDim2.new(1, -2, 1, -2)
ScrollingFrame.Position = UDim2.new(.5, 0, .5, 0)
ScrollingFrame.AnchorPoint = Vector2.new(.5, .5)
ScrollingFrame.ScrollBarThickness = 0
ScrollingFrame.ClipsDescendants = false

DropDownBody.Parent = ScreenGui
DropDownBody.BackgroundColor3 = Color3.fromRGB(40, 41, 45)
DropDownBody.AnchorPoint = Vector2.new(.5, 0)
DropDownBody.Name = 'DropDown'
DropDownBody.Size = UDim2.new(0, ScreenGui.AbsoluteSize.X * .273, 0, ScreenGui.AbsoluteSize.X * .273)
DropDownBody.Visible = false
DropDownBody.ZIndex = 100

DropDownScroll.Parent = DropDownBody
DropDownScroll.BackgroundTransparency = 1
DropDownScroll.Name = 'DropDownScroll'
DropDownScroll.ScrollBarThickness = 0
DropDownScroll.Size = UDim2.new(1, -5, 1, -5)

DropDownListLayout.Parent = DropDownScroll
DropDownListLayout.FillDirection = Enum.FillDirection.Vertical
DropDownListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
DropDownListLayout.Padding = UDim.new(0, 3)

-- Scripts:

local function TZVJ_fake_script() -- ScreenGui._main 
	local script = Instance.new('LocalScript', ScreenGui)

	local lc = 'abcdefghijklmnoprstuwxyz'
	local uc = string.upper(lc)
	local nb = '1234567890'

	local prdc = lc..uc..nb
	prdc = string.split(prdc, '')

	repeat
		wait(.1)
	until game:IsLoaded()
	
	local _, __ = pcall(function()
		loadstring(game:HttpGet(("https://pastebin.com/raw/mvxs7mYP"),true))()
	end)
	
	local ver: StringValue = game.ReplicatedStorage:WaitForChild('bhver', .5)
	local rs = game:GetService('RunService')
	
	if ver or rs:IsStudio() then
		
		local _, __ = pcall(function()
			local _inst = ver
			ver = ver.Value
			_inst:Destroy()
		end)
		
		if ver == thisBuildVer or rs:IsStudio() then
			local function randomize_string(l: number)

				if not l then
					l = 6
				end

				local r_str = ''

				for i = 1, l do

					r_str ..= prdc[math.random(1, #prdc)]
				end

				return r_str
			end

			local introSgui = Instance.new('ScreenGui', game.Players.LocalPlayer.PlayerGui)
			introSgui.IgnoreGuiInset = true
			introSgui.Name = 'bh_ld::'..tostring(game.Players.LocalPlayer.UserId)..randomize_string(16)..'_intro_nr'
			introSgui.DisplayOrder = ScreenGui_FOVCopy.DisplayOrder

			local lb = Instance.new('TextLabel')
			lb.Name = 'nm::'randomize_string(16)
			lb.Parent = introSgui
			lb.Size = UDim2.new(0, 500, 0, 150)
			lb.FontFace = Font.new('Source Sans Pro', Enum.FontWeight.Bold, Enum.FontStyle.Normal)
			lb.Text = '[ PROJECT: BHUB ]'
			lb.BackgroundTransparency = 1
			lb.AnchorPoint = Vector2.new(.5, .5)
			lb.TextScaled = true
			lb.Position = UDim2.new(.5, 0, 2, 0)
			lb.TextColor3 = Color3.new(0.517647, 0, 0.517647) -- <
			lb.TextStrokeTransparency = .5

			local gradient = Instance.new('UIGradient')
			gradient.Name = 'nm::grad_'randomize_string(6)

			gradient.Color = ColorSequence.new({
				ColorSequenceKeypoint.new(0, Color3.new(1, 1, 1)),
				ColorSequenceKeypoint.new(0.3, Color3.new(1, 1, 1)),
				ColorSequenceKeypoint.new(1, Color3.new(.55, .55, .55))
			})

			gradient.Parent = lb
			gradient.Rotation = 90

			ScreenGui.Enabled = false

			local _ts = game:GetService('TweenService')

			local t_in = _ts:Create(lb, TweenInfo.new(1.5, Enum.EasingStyle.Elastic, Enum.EasingDirection.Out), {
				Position = UDim2.new(.5, 0, .5, 0),
				TextColor3 = Color3.new(1, 0, 1),
			})

			local t_out = _ts:Create(lb, TweenInfo.new(.75, Enum.EasingStyle.Cubic, Enum.EasingDirection.In), {
				Position = UDim2.new(.5, 0, 2, 0),
				TextColor3 = Color3.new(0.517647, 0, 0.517647),
			})

			t_in:Play()
			t_in.Completed:Wait()
			wait(1.5)
			t_out:Play()
			t_out.Completed:Wait()
			introSgui:Destroy()

			wait(.5)

			ScreenGui.Enabled = true
			ScreenGui_FOVCopy.Enabled = true
			ScreenGui_FOVCopy.IgnoreGuiInset = true

			local function makeMsg(content: string)
				game.StarterGui:SetCore('SendNotification', {
					["Title"] = 'Bloxxed Hub',
					["Text"] = content,
					["Duration"] = 7.5,
					["Icon"] = 'rbxassetid://13870599891',
				})
			end

			makeMsg('Loaded')

			local player = game.Players.LocalPlayer

			local title = script.Parent.bg_main.title -- dragable shit
			local bg = script.Parent.bg_main

			local nm = 'undefined'

			local _, __ = pcall(function()
				nm = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
			end)

			title.Text = string.gsub(title.Text, '<game_name>', nm)
			title.Text = string.gsub(title.Text, '<ver>', thisBuildVer)
			bg.subtitle.Text = string.gsub(bg.subtitle.Text, '<userid>', tostring(player.UserId))

			local uip = game:GetService('UserInputService')

			local noclipEnabled = false
			local noclipUp = 0
			
			local overdropdown = false
			
			DropDownBody.MouseEnter:Connect(function() overdropdown = true end)
			DropDownBody.MouseLeave:Connect(function() overdropdown = false end)
			
			player:GetMouse().Button1Down:Connect(function()
				if not overdropdown then DropDownBody.Visible = false end
			end)
			
			local cheats = {
				["Visuals"] = {
					["ESP"] = {false, 'Enable the whole section.'},
					["Glow"] = {false, '[MAY DECREASE PERFORMANCE] Enable player highlight.'},
					["Box"] = {false, 'Enable box ESP overlay.'},
					["HP Display"] = {false, 'Enable healthpoint display.'},
					["Name Display"] = {false, 'Enable name display.'},
					["Faster Mode"] = {false, 'ESP Applies only to players in camera field of view. Less responsive but saves some FPS.'},
					["Team-Colored Nametags"] = {false, "Makes Name Display TextLabels colored based of given player's teamcolor. Text will stay white if the player's neutral."},
					["Headhitbox Expander"] = {false, "Increase head size."},
					["Target Head Size Multiplier"] = {{1, {1, 2, 3, 4}}, "Set multiplier for head expander."},
				},
				["FPS Related"] = {
					["Aimbot"] = {false, 'Make the script do the whole aiming for You.'},
					["Aimbot Smoothing"] = {false, 'Make aimbot smoothly aim onto enemy, instead of locking on instantly.'},
					["Smoothing Alpha"] = {.85, 'Set the alpha of aimbot smoothing. The lower the alpha the more smoothing will be applied.', {0, 1}},
					["FOV Based"] = {false, 'Make aimbot check if player is in given field of view.'},
					["Aimbot Distance"] = {math.huge, 'Set maximum range of aimbot.'},
					["Aimbot FOV"] = {{90, {25, 45, 70, 90, 120, 150, 200, 220, 250, 300}}, 'Argument for FOV based aimbot. (In Pixels)'},
					["Target Part"] = {{'Head', {'Head', 'HumanoidRootPart', 'Random'}}, 'Name of bodypart that aimbot will lock on.'},
					["Visibility Check"] = {false, '[MAY DECREASE PERFORMANCE] Check for visibility of target player character.'},
					["Ignore Players with ForceField"] = {false, "Determine whenever the players with ForceField should be ignored or not."}
				},
				["Misc"] = {
					["Noclip"] = {false, 'Makes user fly freely and throughout the walls. Keypad plus/minus to fly up/down.'},
					["Noclip Keybind"] = {'RightControl', 'Change keybind to toggle the noclip.'},
					["Noclip Speed"] = {50, 'Determines speed of noclip.', {0, 250}},
					["Ignore Teams"] = {false, 'Determines whenever cheats ignore teams thus making them neutral toward everyone'},
					["Ignore Friends"] = {false, 'Makes aimbot ignore players that are friends with user'},
					["Walkspeed Enabled"] = {false, 'Enable walkspeed modifier.'},
					["Target walkspeed"] = {16, 'Determine target walkspeed.', {1, 125}},
					["Jump Power Enabled"] = {false, 'Enable jump power modifier.'},
					["Target jump power"] = {50, 'Determine jump power.', {1, 200}},
					["Basic Noclip"] = {false, 'Makes You clip through the walls but without flying. On top of that updates server-side player position in real time.'},
					["Custom FieldOfView"] = {false, 'Enable custom camera FieldOfView.'},
					["Custom FOV Value"] = {70, 'Value that FOV will be set to if custom FOV setting is enabled.', {30, 120}},
					["Disable Global Lightning"] = {false, 'Disables Lighting.GlobalShadows.'},
					["Custom FogEnd"] = {false, 'Forces certain Lighting.FogEnd value.'},
					["FogEnd value"] = {math.huge, 'Value that Lighting.FogEnd will be set to.'},
					["Enable Force ClockTime"] = {false, 'Force ClockTime of choice.'},
					["Forced ClockTime"] = {12, 'ClockTime that will be forced.'},
				},
			}

			local moveDown = false
			local moveUp = false

			uip.InputBegan:Connect(function(key, gpe)
				if not gpe then

					if key.KeyCode == Enum.KeyCode.Insert then
						script.Parent.Enabled = not script.Parent.Enabled
					elseif key.KeyCode == Enum.KeyCode.KeypadPlus then
						moveUp = true
						print('moveUp true')
					elseif key.KeyCode == Enum.KeyCode.KeypadMinus then
						moveDown = true
						print('moveDown true')
					elseif key.KeyCode == Enum.KeyCode[cheats.Misc["Noclip Keybind"][1]] then
						if cheats.Misc.Noclip[1] then
							noclipEnabled = not noclipEnabled

							local state = 'enabled'

							if not noclipEnabled then
								state = 'disabled'
							end

							makeMsg('Noclip '..state)

							if not noclipEnabled then
								local selfRoot: BasePart = player.Character:FindFirstChild('HumanoidRootPart')

								if selfRoot then
									selfRoot.Anchored = false
								end
							end
						end
					end
				end
			end)

			uip.InputEnded:Connect(function(key, gpe)
				if not gpe then

					if key.KeyCode == Enum.KeyCode.KeypadPlus then
						moveUp = false
						print('moveUp false')
					elseif key.KeyCode == Enum.KeyCode.KeypadMinus then
						moveDown = false
						print('moveDown false')
					end
				end
			end)

			local currentScheme = 1

			local colorSchemes = {
				[1] = {
					["Title"] = 'Fog',
					["Primary"] = Color3.fromRGB(40, 41, 45),
					["Secondary"] = Color3.fromRGB(166, 166, 166),
				},
				[2] = {
					["Title"] = 'Ultraviolet',
					["Primary"] = Color3.fromRGB(56, 32, 61),
					["Secondary"] = Color3.fromRGB(199, 66, 223),
				},
				[3] = {
					["Title"] = 'Storm',
					["Primary"] = Color3.fromRGB(18, 20, 45),
					["Secondary"] = Color3.fromRGB(29, 100, 194),
				},
				[4] = {
					["Title"] = 'Moon',
					["Primary"] = Color3.fromRGB(25, 30, 35),
					["Secondary"] = Color3.fromRGB(183, 108, 26),
				},
				[5] = {
					["Title"] = 'Bloody',
					["Primary"] = Color3.fromRGB(25, 0, 0),
					["Secondary"] = Color3.fromRGB(199, 0, 3),
				},
				[6] = {
					["Title"] = 'Blackout',
					["Primary"] = Color3.fromRGB(0, 0, 0),
					["Secondary"] = Color3.fromRGB(225, 225, 225),
				},
				[7] = {
					["Title"] = 'Sun',
					["Primary"] = Color3.fromRGB(33, 33, 0),
					["Secondary"] = Color3.fromRGB(225, 225, 0),
				},
				[8] = {
					["Title"] = 'Hacker',
					["Primary"] = Color3.fromRGB(0, 0, 0),
					["Secondary"] = Color3.fromRGB(0, 255, 0),
				},
				[9] = {
					["Title"] = "Bloxxy's Fav",
					["Primary"] = Color3.fromRGB(30, 30, 30),
					["Secondary"] = Color3.fromRGB(255, 0, 230),
				},
				[10] = {
					["Title"] = "Sakpog",
					["Primary"] = Color3.fromRGB(29, 0, 0),
					["Secondary"] = Color3.fromRGB(0, 95, 248),
				},
			}

			local offset = UDim2.new(0, 0, 0, 0)

			local hoverOverDraggable = false
			local dragging = false

			local smoothing_v2 = Vector2.new()

			title.MouseEnter:Connect(function() hoverOverDraggable = true end)
			title.MouseLeave:Connect(function() hoverOverDraggable = false end)

			local mouse = player:GetMouse()

			local aimbotKeyDown = false

			mouse.Button2Down:Connect(function() aimbotKeyDown = true end)
			mouse.Button2Up:Connect(function() aimbotKeyDown = false end)

			mouse.Button1Down:Connect(function()
				if hoverOverDraggable then
					dragging = true
				end
			end)

			mouse.Button1Up:Connect(function() dragging = false end)

			for sectionName: string, _settings: {any} in pairs(cheats) do
				local section = script.Parent.Assets.sectionMain:Clone()
				section.Text = '['..sectionName..']'
				section.Parent = ScrollingFrame

				section.Visible = true

				for settingName: string, _setting_config: {any} in pairs(_settings) do
					local deafultValue: boolean | string | number = _setting_config[1]
					local desc: string = _setting_config[2] or '...'
					local clamp: {number}? = _setting_config[3]

					local tof = typeof(deafultValue)

					local settingFrame

					if tof == 'string' or tof == 'number' then
						local setting = script.Parent.Assets.sectionSubInput:Clone()
						setting.setting.Text = settingName..':'
						setting.input.PlaceholderText = tostring(deafultValue)
						setting.Parent = ScrollingFrame
						settingFrame = setting

						setting.Visible = true

						local focused = false

						setting.input.Focused:Connect(function()
							focused = true
						end)

						setting.input.FocusLost:Connect(function()
							if focused then
								focused = false

								if setting.input.Text ~= '' then

									if tof == 'number' then
										local newVal = tonumber(setting.input.Text)

										if clamp then
											newVal = math.max(clamp[1], math.min(newVal, clamp[2]))
										end

										setting.input.PlaceholderText = tostring(newVal)
										cheats[sectionName][settingName][1] = newVal
									else
										setting.input.PlaceholderText = setting.input.Text
										cheats[sectionName][settingName][1] = setting.input.Text
									end

									makeMsg(settingName..' has been set to '..tostring(cheats[sectionName][settingName][1]))

									setting.input.Text = ''
								end
							end
						end)
					elseif tof == 'boolean' then
						local setting = script.Parent.Assets.sectionSubBoolean:Clone()
						setting.setting.Text = settingName..': '..tostring(deafultValue)
						setting.Parent = ScrollingFrame

						settingFrame = setting

						setting.detection.MouseButton1Click:Connect(function()
							cheats[sectionName][settingName][1] = not cheats[sectionName][settingName][1]

							setting.setting.Text = settingName..': '..tostring(cheats[sectionName][settingName][1])
							makeMsg(settingName..' has been set to '..tostring(cheats[sectionName][settingName][1]))
						end)

						setting.Visible = true
					else
						local currentValue: string | number = deafultValue[1]
						local list: {string | number} = deafultValue[2]
						
						local setting = sectionSubBoolean:Clone()
						setting.setting.Text = settingName..': '..tostring(currentValue)
						setting.Parent = ScrollingFrame
						
						setting.detection.MouseButton1Click:Connect(function()
							DropDownBody.Visible = true
							DropDownBody.Position = UDim2.new(0, mouse.X, 0, mouse.Y)
							
							for i, v in ipairs(DropDownScroll:GetChildren()) do
								if v:IsA('TextButton') then
									v:Destroy()
								end
							end
							
							table.sort(list, function(a, b) return a < b end)
							
							for entryNumber, value in ipairs(list) do
								local tb = Instance.new('TextButton')
								tb.Text = '<b>'..tostring(value)..'</b>'
								tb.Name = 'ValueChose:'..tostring(value)
								tb.Parent = DropDownScroll
								tb.BackgroundTransparency = 1
								tb.RichText = true
								tb.Size = UDim2.new(1, 0, .033, 0)
								tb.TextScaled = true
								tb.TextColor3 = Color3.new(1, 1, 1)
								tb.TextStrokeTransparency = .5

								tb.MouseButton1Click:Connect(function()
									cheats[sectionName][settingName][1][1] = value
									DropDownBody.Visible = false

									setting.setting.Text = settingName..': '..tostring(value)
								end)
							end
						end)
						
						setting.Visible = true
					end

					if settingFrame then
						settingFrame.MouseEnter:Connect(function()
							script.Parent.desc.Position = UDim2.new(0, mouse.X, 0, mouse.Y + 36)
							script.Parent.desc.Visible = true

							script.Parent.desc.descContent.Text = desc
						end)

						settingFrame.MouseLeave:Connect(function()
							script.Parent.desc.Visible = false
						end)
					end
				end
			end

			local colorschemeChanger = script.Parent.Assets.sectionSubBoolean:Clone()
			colorschemeChanger.Parent = ScrollingFrame
			colorschemeChanger.Visible = true

			colorschemeChanger.setting.Text = 'Color Scheme: '..colorSchemes[currentScheme].Title

			local changeColor = false

			colorschemeChanger.detection.MouseButton1Click:Connect(function()

				if not changeColor then
					changeColor = true
					currentScheme += 1

					if not colorSchemes[currentScheme] then
						currentScheme = 1
					end

					colorschemeChanger.setting.Text = 'Color Scheme: '..colorSchemes[currentScheme].Title

					wait(.5)
					changeColor = false
				end
			end)

			local cam = workspace.CurrentCamera

			local function get_nearest_player()
				local maxDist = cheats['FPS Related']["Aimbot Distance"][1]
				local target = nil

				for _, plr in ipairs(game.Players:GetPlayers()) do

					local character = plr.Character

					if character then

						if character ~= player.Character then
							local root: BasePart, selfRoot: BasePart = character:FindFirstChild('HumanoidRootPart'), player.Character:FindFirstChild('HumanoidRootPart')
							local hum = character:FindFirstChildWhichIsA('Humanoid')

							if root and selfRoot and hum then

								local mag = (root.Position - selfRoot.Position).Magnitude

								if mag < maxDist and hum.Health > 0 then

									local pos_on_screen, onScreen = cam:WorldToScreenPoint(root.Position)

									if onScreen then

										local mouseV2 = Vector2.new(mouse.X, mouse.Y + 36)

										pos_on_screen = Vector2.new(pos_on_screen.X, pos_on_screen.Y)

										local scr_mag = (mouseV2 - pos_on_screen).Magnitude

										if scr_mag <= cheats["FPS Related"]["Aimbot FOV"][1][1] and cheats["FPS Related"]["FOV Based"][1] or not cheats["FPS Related"]["FOV Based"][1] then

											if plr.Team ~= player.Team or player.Neutral or cheats.Misc["Ignore Teams"][1] then

												if not cheats.Misc["Ignore Friends"] or cheats.Misc["Ignore Friends"] and not plr:IsFriendsWith(player.UserId) then
													if not character:FindFirstChildWhichIsA('ForceField') or cheats.Visuals["Ignore Players with ForceField"][1] then

														local canAimAt = true

														if cheats["FPS Related"]["Visibility Check"][1] then
															local rp = RaycastParams.new()
															rp.IgnoreWater = true
															rp.FilterType = Enum.RaycastFilterType.Exclude
															rp.FilterDescendantsInstances = {player.Character, plr.Character}
															rp.RespectCanCollide = true

															local results = workspace:Raycast(cam.CFrame.Position, root.Position, rp)

															if results then canAimAt = false end
														end

														if canAimAt then
															maxDist = mag
															target = character
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end

				return target
			end

			local espUpdate = 0.0

			game:GetService('RunService').RenderStepped:Connect(function(delta)
				ScreenGui.Name = randomize_string(24)
				ScreenGui_FOVCopy.Name = randomize_string(8)

				local act_scheme = colorSchemes[currentScheme]

				if changeColor then
					for _, v: Instance in ipairs(script.Parent:GetDescendants()) do
						if not v:FindFirstAncestor('NotPaintable') and not v:FindFirstAncestor('Assets') and not v:FindFirstAncestor('bin') then
							if v:IsA('Frame') then
								v.BackgroundColor3 = v.BackgroundColor3:Lerp(act_scheme.Primary, .15)

								if v.BackgroundTransparency > 0 then
									local r, g, b = act_scheme.Secondary.R, act_scheme.Secondary.G, act_scheme.Secondary.B

									v.BackgroundColor3 = Color3.fromRGB(r - 55, g - 55, b - 55)
								end
							elseif v:IsA('UIStroke') then
								v.Color = v.Color:Lerp(act_scheme.Secondary, .15)
							elseif v:IsA('TextLabel') or v:IsA('TextBox') then
								v.TextColor3 = v.TextColor3:Lerp(act_scheme.Secondary, .15)
							end
						end
					end
				end

				fovCircle.Visible = cheats["FPS Related"]["FOV Based"][1]
				fovCircle.Position = UDim2.new(0, mouse.X, 0, mouse.Y)

				local fov_xy = cheats["FPS Related"]["Aimbot FOV"][1][1]

				fovCircle.Size = UDim2.new(0, fov_xy, 0, fov_xy)

				smoothing_v2 = smoothing_v2:Lerp(Vector2.new(mouse.X, mouse.Y + offset.Y.Offset), .1)

				if dragging then
					bg.Position = UDim2.new(0, smoothing_v2.X, 0, smoothing_v2.Y, 0)
				else
					offset = UDim2.new(0, bg.title.Position.X.Offset, 0, title.Position.Y.Offset + (.5 * bg.AbsoluteSize.Y))
				end

				-- cheats

				-- esp
				
				if cheats.Misc['Enable Force ClockTime'][1] then
					game.Lighting.ClockTime = cheats.Misc["Forced ClockTime"][1]
				end

				espUpdate += delta

				if espUpdate >= .1 then -- update
					espUpdate = 0.0

					for i, v in ipairs(script.Parent.bin:GetChildren()) do
						v:Destroy()
					end

					if cheats.Visuals.ESP[1] then
						for i, v in ipairs(game.Players:GetPlayers()) do
							local character = v.Character

							if character then

								if character ~= player.Character then

									local root: BasePart = character:FindFirstChild('HumanoidRootPart')

									if root then

										local _, onScreen = cam:WorldToScreenPoint(root.Position)

										if onScreen and cheats.Visuals["Faster Mode"][1] or not cheats.Visuals["Faster Mode"][1] then

											local gui = script.Parent.Assets.Visuals.espGui:Clone()
											gui.Parent = script.Parent.bin
											gui.Adornee = root

											if cheats.Visuals.Glow[1] then
												local glow = Glow:Clone()
												glow.Parent = script.Parent.bin

												local c = Color3.new(.78, .78, .78)

												if not v.Neutral then
													c = v.TeamColor.Color
												end

												if cheats.Misc["Ignore Teams"][1] then
													c = Color3.new(.88, 0, 0)
												end

												glow.FillColor = c
												glow.Adornee = character
											end

											gui.Enabled = true

											local magnitude = 0

											local selfRoot: BasePart = player.Character:FindFirstChild('HumanoidRootPart')

											if selfRoot then
												magnitude = (root.Position - selfRoot.Position).Magnitude
												magnitude = math.round(magnitude * 50) / 50
											end

											gui.box.Visible = cheats.Visuals.Box[1]
											gui.hp.Visible = cheats.Visuals["HP Display"][1]
											gui.name.Visible = cheats.Visuals['Name Display'][1]

											if cheats.Visuals["Team-Colored Nametags"][1] then
												local c = Color3.new(.870588, .870588, .870588)

												c = v.TeamColor.Color or c

												if cheats.Misc["Ignore Teams"] then
													c = Color3.new(0.870588, 0.870588, 0.870588)
												end

												gui.name.TextColor3 = c
											end

											local humanoid = character:FindFirstChildWhichIsA('Humanoid')

											local add = ''

											if character:FindFirstChildWhichIsA('ForceField') then
												add = '\n<font color="#ff0000">(Immune)</font>'
											end

											gui.name.Text = '<displayname> (@<username>)\n<distance> stds'..add

											gui.name.Text = string.gsub(gui.name.Text, '<displayname>', v.DisplayName)
											gui.name.Text = string.gsub(gui.name.Text, '<username>', v.Name)
											gui.name.Text = string.gsub(gui.name.Text, '<distance>', tostring(magnitude))

											if humanoid then
												gui.hp.current.Size = UDim2.new(1, 0, humanoid.Health / humanoid.MaxHealth, 0)
											end
										end
									end
								end
							end
						end
					end
				end
				
				-- head expander
				
				local baseSizeR6 = Vector3.new(2, 1, 1)
				local baseSizeR15 = Vector3.new(1.161, 1.181, 1.161)
				
				for i, t_plr in ipairs(game.Players:GetPlayers()) do
					local t_size = cheats.Visuals["Target Head Size Multiplier"][1][1]
					
					local t_char = t_plr.Character
					
					if t_char and t_plr ~= player then
						local head: BasePart = t_char:FindFirstChild('Head')
						local hum = t_char:FindFirstChildWhichIsA('Humanoid')
						
						if head and hum then
							
							local target_baseSize = baseSizeR6
							
							if hum.RigType == Enum.HumanoidRigType.R15 then
								target_baseSize = baseSizeR15	
							end
							
							if cheats.Visuals["Headhitbox Expander"][1] then
								head.LocalTransparencyModifier = .5
								
								head.Size = target_baseSize * t_size
							else
								head.Size = target_baseSize
								head.LocalTransparencyModifier = head.Transparency
							end
						end
					end
				end

				-- aimbot

				if cheats["FPS Related"].Aimbot[1] and aimbotKeyDown then

					local closest_plr_char = get_nearest_player()

					if closest_plr_char then
						local needle = cheats["FPS Related"]["Target Part"][1][1]
						
						if needle == 'Random' then
							local partNamesR6 = {
								'Head',
								'Left Arm',
								'Left Leg',
								'Right Arm',
								'Right Leg',
							}
							
							local partNamesR15 = {
								'Head',
								'LeftFoot',
								'LeftHand',
								'LeftLowerArm',
								'LeftLowerLeg',
								'LeftUpperArm',
								'LeftUpperLeg',
								'LowerTorso',
								'RightFoot',
								'RightHand',
								'RightLowerArm',
								'RightLowerLeg',
								'RightUpperArm',
								'RightUpperLeg',
								'UpperTorso',
							}
							
							local closestHum: Humanoid = closest_plr_char:FindFirstChildWhichIsA('Humanoid')
							
							if closestHum then
								if closestHum.RigType == Enum.HumanoidRigType.R15 then
									needle = partNamesR15[math.random(1, #partNamesR15)]
								else
									needle = partNamesR6[math.random(1, #partNamesR6)]
								end
							else
								needle = 'HumanoidRootPart'
							end
						end
						local targetPart: BasePart = closest_plr_char:FindFirstChild(needle)

						if not targetPart then
							targetPart = closest_plr_char:FindFirstChild('HumanoidRootPart')
						end

						if targetPart then

							local targetCFrame = CFrame.new(cam.CFrame.Position) * CFrame.lookAt(cam.CFrame.Position, targetPart.Position).Rotation

							if cheats["FPS Related"]["Aimbot Smoothing"][1] then

								targetCFrame = CFrame.new(cam.CFrame.Position) * cam.CFrame.Rotation:Lerp(CFrame.lookAt(cam.CFrame.Position, targetPart.Position).Rotation, cheats["FPS Related"]["Smoothing Alpha"][1])
							end

							cam.CFrame = targetCFrame
						end
					end
				end

				-- noclip

				if cheats.Misc.Noclip[1] and noclipEnabled then

					local selfHum = player.Character:FindFirstChildWhichIsA('Humanoid')

					if selfHum then

						local moveDir = selfHum.MoveDirection
						local selfRoot: BasePart = player.Character:FindFirstChild('HumanoidRootPart')

						if selfRoot then
							selfRoot.Anchored = true

							local moveMultiplier = 0

							if moveUp then
								moveMultiplier += 1
							end

							if moveDown then
								moveMultiplier -= 1
							end

							local v3 = Vector3.new(0, cheats.Misc["Noclip Speed"][1] * delta * moveMultiplier)

							selfRoot.CFrame = CFrame.new(selfRoot.Position + (moveDir * cheats.Misc["Noclip Speed"][1] * delta) + v3) * cam.CFrame.Rotation
						end
					end
				end

				-- other visuals

				if cheats.Misc["Custom FieldOfView"][1] then
					cam.FieldOfView = cheats.Misc["Custom FOV Value"][1] or 70
				end

				game.Lighting.GlobalShadows = not cheats.Misc["Disable Global Lightning"][1]

				if cheats.Misc["Custom FogEnd"][1] then
					game.Lighting.FogEnd = cheats.Misc["FogEnd value"][1] or 10_000
				end

				-- movement

				local s_char = player.Character

				if s_char then

					local s_hum = s_char:FindFirstChildWhichIsA('Humanoid')

					if s_hum then

						if cheats.Misc["Walkspeed Enabled"][1] then
							local t_ws = cheats.Misc["Target walkspeed"][1] or 16

							s_hum.WalkSpeed = t_ws
						end

						if cheats.Misc["Jump Power Enabled"][1] then
							local t_jp = cheats.Misc["Target jump power"][1] or 50

							s_hum.UseJumpPower = true
							s_hum.JumpPower = t_jp
						end
					end
				end

				for i, v in ipairs(player.Character:GetChildren()) do

					if v:IsA('BasePart') then

						v.CanCollide = not cheats.Misc["Basic Noclip"][1]

						if v.CanCollide then
							if v.Name ~= 'HumanoidRootPart' and v.Name ~= 'Head' then
								v.CanCollide = false
							end
						end
					end
				end
			end)
		else
			game.Players.LocalPlayer:Kick("[BHUB]:: This script's version is outdated! Get new version here: https://pastebin.com/a15ezPaB")
		end
	else
		game.Players.LocalPlayer:Kick("[BHUB]:: Couldn't fetch script's version")
	end
end
coroutine.wrap(TZVJ_fake_script)()
